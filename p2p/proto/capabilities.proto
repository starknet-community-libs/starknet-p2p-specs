import "p2p/proto/common.proto";

// A capability for one of the following protocols:
// 1. /starknet/headers/
// 2. /starknet/state_diffs/
// 3. /starknet/classes/
// 4. /starknet/transactions/
// 5. /starknet/events/
// The capability defines which blocks does the node store
message SyncCapability {
    message ArchiveStrategy {} // Keep all data from genesis for the given protocol.
    message L1PruneStrategy {} // Keep all data not accepted on L1 for the given protocol.
    message ConstSizePruneStrategy { // Keep data for the top n blocks of the chain for the given protocol.
        uint64 num_blocks = 1;
    }
    message StaticPruneStrategy { // Keep all data from a hardcoded block for the given protocol.
        uint64 first_block_number = 1;
    }

    oneof prune_strategy {
        ArchiveStrategy archive_strategy = 1;
        L1PruneStrategy l1_prune_strategy = 2;
        ConstSizePruneStrategy const_size_prune_strategy = 3;
        StaticPruneStrategy static_prune_strategy = 4;
    }
}

// A capability for a staker. It contains the starknet address of the staker and a signature to show
// that the peer controls this account.
message StakerCapability {
    Address staker_address = 1;
    repeated Felt252 signature = 2; // A signature over keccak("STARKNET_STAKER_PEER_ID"||peer_id)
                                    // with the account contract given above.
}
