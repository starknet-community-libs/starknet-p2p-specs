syntax = "proto3";
import "p2p/proto/common.proto";


// optimized for flat storage, not through a trie (not sharing key prefixes)
message ContractStoredValue {
    Felt252 key = 1;
    Felt252 value = 2;
}

message ContractDiff {
    Address  address                    = 1;
    optional Felt252 nonce              = 2;
    optional Felt252 class_hash         = 3;  // can change for replace_class or new contract
    repeated ContractStoredValue values = 4;
    uint32   domain                     = 5;  // volition state domain
}

message StateDiffsRequest {
    Iteration iteration = 1;
}

// Responses are sent ordered by the order given in the request.
message StateDiffsResponse {
    // All of the messages related to a block need to be sent before a message from the next block is sent.
    oneof state_diff_message {
        ContractDiff contract_diff = 1;
        Address      deployed_contract = 2;
        Address      replaced_contract = 3;
        Fin          fin               = 4; // Fin is sent after the peer sent all the data or when it encountered a block that it doesn't have its state diff.
    }
}
